{"ast":null,"code":"import _defineProperty from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/ouyang/Desktop/react-reduction/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/ouyang/Desktop/react-reduction/src/pages/Simulator2.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport TextField from '@material-ui/core/TextField';\nimport color from '@material-ui/core/colors/amber';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl'; // import DatePicker from \"react-datepicker\";\n\nimport { Row, Col, Card, CardHeader, CardBody, InputGroup, InputGroupAddon, InputGroupText, Label, Input, Button, Form, FormGroup, FormText, UncontrolledButtonDropdown, DropdownToggle, DropdownItem, DropdownMenu } from 'reactstrap';\nimport Page from 'components/Page'; // var email = 'jinxund@smu.edu'\n// var vm_id = 46\n\nvar Simulator =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Simulator, _React$Component);\n\n  function Simulator(props) {\n    var _this;\n\n    _classCallCheck(this, Simulator);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Simulator).call(this, props));\n\n    _this.emailChangeHandler = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.itemChangeHandler = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value), function () {\n        _this.setState({\n          unit_price: _this.state.allvm[_this.state.vm_id]['products'][_this.state.item]['price']\n        });\n      });\n    };\n\n    _this.amountChangeHandler = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value), function () {\n        _this.setState({\n          total_price: _this.state.amount * _this.state.unit_price\n        });\n      });\n    };\n\n    _this.vmidChangeHandler = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value), function () {\n        // when vm_id change, the product list also change\n        var product_list = Object.keys(_this.state.allvm[event.target.value]['products']);\n        var item_array = [];\n\n        for (var i = 0; i < product_list.length; i++) {\n          item_array.push({\n            id: product_list[i],\n            item: product_list[i],\n            unit_price: _this.state.allvm[event.target.value]['products'][product_list[i]]['price']\n          });\n        }\n\n        _this.setState({\n          itemArray: item_array\n        });\n      });\n    };\n\n    _this.orderInfoChangeHandler = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n\n      console.log(_this.state);\n    };\n\n    _this.handleChange = function (date) {\n      _this.setState({\n        startDate: date\n      });\n    };\n\n    _this.confirmPurchase = function () {\n      console.log(_this.state.item);\n      console.log(_this.state.amount);\n      axios.post('http://localhost:5000/simulator/order', _this.state).then(function (response) {\n        if (response.data == 'success') {\n          alert('purchase done!');\n        } else {\n          alert('fail to purchase!');\n        }\n      });\n      axios.post('https://vending-insights-smu.firebaseapp.com/vm/updatetransaction', _this.state).then(function (response) {\n        if (response.data == 'update success') {\n          alert('purchase done!');\n        } else {\n          alert('fail to purchase!');\n        }\n      });\n    };\n\n    _this.state = {\n      // item: '',\n      // amount: 1,\n      // price: 1.5,\n      // email: 'jinxund@smu.edu',\n      // id: 1,\n      // amount: 10,\n      // date: Date.now(),\n      item: '',\n      amount: 1,\n      unit_price: 0,\n      vm_id: 1,\n      email: 'jinxund@smu.edu',\n      total_price: 0,\n      vm_id_array: [],\n      date: '',\n      year: 2020,\n      month: 3,\n      day: 1,\n      allvm: '',\n      // orderInfo:{\n      //     orderItem: '',\n      //     orderAmount: 1,\n      //     price: 3,\n      // },\n      itemArray: [{\n        id: 1,\n        item: \"Coke-testing\",\n        price: 2\n      }]\n    };\n    _this.onSubmitId = _this.onSubmitId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.dateChangeHandler = _this.dateChangeHandler.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Simulator, [{\n    key: \"dateChangeHandler\",\n    value: function dateChangeHandler(event) {\n      var date = event.target.value;\n      var list = date.split(\"-\");\n      this.setState({\n        date: list,\n        year: list[0],\n        month: list[1],\n        day: list[2]\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"onSubmitId\",\n    value: function onSubmitId() {\n      var _this2 = this;\n\n      var allvm;\n      axios.post('http://localhost:5000/vm/getallvm', {\n        email: this.state.email\n      }).then(function (response) {\n        if (response.data !== null) {\n          allvm = response.data;\n        } else {\n          console.log('fail to get all vm datas');\n        }\n      }).then(function () {\n        _this2.setState({\n          vm_id_array: Object.keys(allvm),\n          allvm: allvm\n        });\n\n        console.log(allvm);\n        console.log(_this2.state);\n      }).then(function () {// var vm_id_list = Object.keys(this.state.allvm)\n        // // var \n        // this.setState({\n        // })\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Page, {\n        title: \"Simulator\",\n        breadcrumbs: [{\n          name: 'Simulator',\n          active: true\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Email\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"half-width-text-field\",\n        placeholder: \"xxx@smu.edu\",\n        margin: \"normal\",\n        fullWidth: true,\n        name: \"email\",\n        value: \"jinxund@smu.edu\",\n        onChange: this.emailChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fullwidth: \"true\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.onSubmitId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"submit\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Vending Machine ID\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        id: \"demo-simple-select-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"id\"), React.createElement(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        name: \"vm_id\",\n        value: this.state.vm_id,\n        onChange: this.vmidChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, this.state.vm_id_array.map(function (row, index) {\n        return React.createElement(MenuItem, {\n          key: row,\n          value: row,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, row);\n      }))))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, \"Vending Machine Item\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        id: \"demo-simple-select-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Item\"), React.createElement(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        onChange: this.itemChangeHandler,\n        value: this.state.item,\n        name: \"item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, this.state.itemArray.map(function (row, index) {\n        return React.createElement(MenuItem, {\n          key: row.id,\n          value: row.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, row.item);\n      })), React.createElement(TextField, {\n        id: \"standard-required-1\",\n        label: \"unit_price\",\n        value: this.state.unit_price,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      })))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, \"Product Amount\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(TextField // id=\"half-width-text-field\"\n      , {\n        placeholder: '' + this.state.amount,\n        margin: \"normal\",\n        name: \"amount\",\n        value: this.state.amount,\n        onChange: this.amountChangeHandler,\n        fullWidth: true,\n        type: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }), React.createElement(Button, {\n        fullwidth: \"true\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.confirmPurchase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"submit\"))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"Total price\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"standard-required-2\",\n        label: \"total_price\",\n        value: this.state.total_price,\n        InputProps: {\n          readOnly: true\n        },\n        variant: \"filled\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358\n        },\n        __self: this\n      }))))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, \"Order Date\"), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"gou tm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"DateTime\"), React.createElement(Input, {\n        type: \"date\",\n        name: \"date\",\n        id: \"dt\",\n        value: this.state.date,\n        placeholder: \"datetime placeholder\",\n        onChange: this.dateChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }))), React.createElement(Button, {\n        fullwidth: \"true\",\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.confirmPurchase,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, \"submit\"))))));\n    }\n  }]);\n\n  return Simulator;\n}(React.Component);\n\nexport default Simulator;","map":{"version":3,"sources":["/Users/ouyang/Desktop/react-reduction/src/pages/Simulator2.js"],"names":["React","axios","TextField","color","Select","MenuItem","makeStyles","InputLabel","FormHelperText","FormControl","Row","Col","Card","CardHeader","CardBody","InputGroup","InputGroupAddon","InputGroupText","Label","Input","Button","Form","FormGroup","FormText","UncontrolledButtonDropdown","DropdownToggle","DropdownItem","DropdownMenu","Page","Simulator","props","emailChangeHandler","event","setState","target","name","value","itemChangeHandler","unit_price","state","allvm","vm_id","item","amountChangeHandler","total_price","amount","vmidChangeHandler","product_list","Object","keys","item_array","i","length","push","id","itemArray","orderInfoChangeHandler","console","log","handleChange","date","startDate","confirmPurchase","post","then","response","data","alert","email","vm_id_array","year","month","day","price","onSubmitId","bind","dateChangeHandler","list","split","active","map","row","index","readOnly","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport color from '@material-ui/core/colors/amber';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n// import DatePicker from \"react-datepicker\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  InputGroupText,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Form,\r\n  FormGroup,\r\n  FormText,\r\n  UncontrolledButtonDropdown,\r\n  DropdownToggle,\r\n  DropdownItem,\r\n  DropdownMenu,\r\n} from 'reactstrap';\r\n\r\nimport Page from 'components/Page';\r\n\r\n// var email = 'jinxund@smu.edu'\r\n// var vm_id = 46\r\n\r\nclass Simulator extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // item: '',\r\n      // amount: 1,\r\n      // price: 1.5,\r\n      // email: 'jinxund@smu.edu',\r\n      // id: 1,\r\n      // amount: 10,\r\n      // date: Date.now(),\r\n\r\n      item: '',\r\n      amount: 1,\r\n      unit_price: 0,\r\n      vm_id: 1,\r\n      email: 'jinxund@smu.edu',\r\n      total_price: 0,\r\n\r\n      vm_id_array:[],\r\n\r\n      date: '',\r\n      year: 2020,\r\n      month: 3,\r\n      day: 1,\r\n\r\n      allvm: '',\r\n\r\n      // orderInfo:{\r\n      //     orderItem: '',\r\n      //     orderAmount: 1,\r\n      //     price: 3,\r\n      // },\r\n\r\n      itemArray: [\r\n          {\r\n              id: 1,\r\n              item: \"Coke-testing\", \r\n              price: 2\r\n          }\r\n      ],\r\n\r\n    }\r\n    this.onSubmitId = this.onSubmitId.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.dateChangeHandler = this.dateChangeHandler.bind(this);\r\n  }\r\n\r\n  dateChangeHandler(event) {\r\n    var date = event.target.value;\r\n    var list = date.split(\"-\");\r\n    this.setState({ \r\n      date: list,\r\n      year: list[0],\r\n      month: list[1],\r\n      day: list[2]\r\n    });\r\n    console.log(this.state);\r\n  }\r\n  onSubmitId()  {\r\n    var allvm;\r\n    axios.post('http://localhost:5000/vm/getallvm',{\r\n      email: this.state.email\r\n    })\r\n    .then(response=>{\r\n      if(response.data !== null){\r\n        allvm = response.data\r\n      }else{\r\n        console.log('fail to get all vm datas')\r\n      }\r\n    })\r\n    .then(()=>{\r\n      this.setState({\r\n        vm_id_array: Object.keys(allvm),\r\n        allvm: allvm\r\n      })\r\n      \r\n      console.log(allvm)\r\n      console.log(this.state)\r\n    }).then(()=>{\r\n      // var vm_id_list = Object.keys(this.state.allvm)\r\n      // // var \r\n      // this.setState({\r\n\r\n      // })\r\n    })\r\n  }\r\n\r\n  emailChangeHandler = (event) =>{\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n\r\n  itemChangeHandler = (event) =>{\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    }, ()=>{\r\n      this.setState({\r\n        unit_price: this.state.allvm[this.state.vm_id]['products'][this.state.item]['price']\r\n      })\r\n    });\r\n  }\r\n\r\n  amountChangeHandler = (event) =>{\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    }, ()=>{\r\n      this.setState({\r\n        total_price: this.state.amount * this.state.unit_price\r\n      })\r\n    });\r\n  }\r\n\r\n  /**\r\n   * \r\n   * we need a json to store\r\n   * {\r\n   *  item: 'Coke',\r\n   *  price: 3,\r\n   * }\r\n   * \r\n   * */ \r\n  vmidChangeHandler = (event) => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    }, ()=>{\r\n      // when vm_id change, the product list also change\r\n      var product_list = Object.keys(this.state.allvm[event.target.value]['products']);\r\n      var item_array = [];\r\n      for(var i=0; i<product_list.length; i++){\r\n        item_array.push({\r\n          id: product_list[i],\r\n          item: product_list[i],\r\n          unit_price: this.state.allvm[event.target.value]['products'][product_list[i]]['price'],\r\n        })\r\n      }\r\n      this.setState({\r\n        itemArray: item_array\r\n      })\r\n    });\r\n  }\r\n\r\n\r\n  orderInfoChangeHandler = (event) =>{\r\n    this.setState({\r\n        [event.target.name]: event.target.value,\r\n        // unit_price: this.state.allvm[this.state.vm_id]['products'][this.state.item]['price']\r\n      }\r\n    );\r\n    console.log(this.state)\r\n  }\r\n\r\n  handleChange = date => {\r\n    this.setState({\r\n      startDate: date\r\n    });\r\n  };\r\n\r\n  confirmPurchase = () => {\r\n    console.log(this.state.item)\r\n    console.log(this.state.amount)\r\n\r\n    axios.post('http://localhost:5000/simulator/order', this.state)\r\n      .then(response => {\r\n        if (response.data == 'success') {\r\n          alert('purchase done!')\r\n        } else {\r\n          alert('fail to purchase!')\r\n        }\r\n      });\r\n\r\n    axios.post('https://vending-insights-smu.firebaseapp.com/vm/updatetransaction', this.state)\r\n      .then(response => {\r\n        if (response.data == 'update success') {\r\n          alert('purchase done!')\r\n        } else {\r\n          alert('fail to purchase!')\r\n        }\r\n      });\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Page title=\"Simulator\" breadcrumbs={[{ name: 'Simulator', active: true }]}>\r\n\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardHeader>Email</CardHeader>\r\n              <CardBody>\r\n                <TextField\r\n                  id=\"half-width-text-field\"\r\n                  placeholder='xxx@smu.edu'\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  name='email'\r\n                  value='jinxund@smu.edu'\r\n                  onChange={this.emailChangeHandler}\r\n                  \r\n                />\r\n                <Button\r\n                  fullwidth=\"true\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.onSubmitId}\r\n                >\r\n                  submit\r\n              </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardHeader>Vending Machine ID</CardHeader>\r\n              <CardBody>\r\n                <FormControl>\r\n                  <InputLabel id=\"demo-simple-select-label\">id</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    name='vm_id'\r\n                    value={this.state.vm_id}\r\n                    onChange={this.vmidChangeHandler}>\r\n                    {/* <MenuItem value={'1'}>id</MenuItem> */}\r\n                    {\r\n                      this.state.vm_id_array.map((row, index)=>{\r\n                      return(\r\n                        <MenuItem key={row} value={row}>{row}</MenuItem>\r\n                        )\r\n                      })\r\n                    }\r\n                  </Select>\r\n                </FormControl>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardHeader>Vending Machine Item</CardHeader>\r\n              <CardBody>\r\n                <FormControl>\r\n                  <InputLabel id=\"demo-simple-select-label\">Item</InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    onChange={this.itemChangeHandler}\r\n                    value={this.state.item}\r\n                    name='item'>\r\n                    {/* <MenuItem value={'Coke'}>Coke</MenuItem>\r\n                    <MenuItem value={'Sprite'}>Sprite</MenuItem> */}\r\n                    {/* <MenuItem value={'Water'}>Water</MenuItem> */}\r\n                    {\r\n                      this.state.itemArray.map((row, index)=>{\r\n                      return(\r\n                        <MenuItem key={row.id} value={row.item}>{row.item}</MenuItem>\r\n                        )\r\n                      })\r\n                    }\r\n                    \r\n                  </Select>\r\n                  <TextField \r\n                    id=\"standard-required-1\" \r\n                    label=\"unit_price\" \r\n                    value={this.state.unit_price}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"filled\"\r\n                    />\r\n                </FormControl>\r\n                \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardHeader>Product Amount</CardHeader>\r\n              <CardBody>\r\n                <TextField\r\n                  // id=\"half-width-text-field\"\r\n                  placeholder={''+this.state.amount}\r\n                  margin=\"normal\"\r\n                  name=\"amount\"\r\n                  value={this.state.amount}\r\n                  onChange={this.amountChangeHandler}\r\n                  fullWidth\r\n                  type=\"number\"\r\n                />\r\n\r\n                <Button\r\n                  fullwidth=\"true\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.confirmPurchase}\r\n                >\r\n                  submit\r\n                </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardHeader>Total price</CardHeader>\r\n              <CardBody>\r\n                <TextField \r\n                    id=\"standard-required-2\" \r\n                    label=\"total_price\"\r\n                    value={this.state.total_price}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                    }}\r\n                    variant=\"filled\"\r\n                />\r\n                \r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row>\r\n          <Col md={12}>\r\n            <Card>\r\n              <CardHeader>Order Date</CardHeader>\r\n              <CardBody>\r\n                <Form>\r\n                  <FormGroup>\r\n\r\n                    <Label for=\"gou tm\">DateTime</Label>\r\n                    <Input\r\n                      type=\"date\"\r\n                      name=\"date\"\r\n                      id='dt'\r\n                      value={this.state.date}\r\n                      placeholder=\"datetime placeholder\"\r\n                      onChange={this.dateChangeHandler} />\r\n                  </FormGroup>\r\n                </Form>\r\n                <Button\r\n                  fullwidth=\"true\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={this.confirmPurchase}\r\n                >\r\n                  submit\r\n                 </Button>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n\r\n        \r\n\r\n      </Page>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Simulator;\r\n\r\n"]},"metadata":{},"sourceType":"module"}