{"version":3,"sources":["pages/ForgetPassword.js","../node_modules/@material-ui/core/esm/Container/Container.js"],"names":["Copyright","variant","color","align","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","ForgetPassword","React","useState","email","state","setState","pin","password","cpassword","pins","setPin","email_error","password_error","cpassword_error","pin_error","piniserror","emailiserror","cpassiserror","passiserror","error","setError","pinHandler","e","target","name","value","validation","length","prevState","sendHandler","console","log","document","getElementsByClassName","hidden","getElementById","disabled","axios","post","then","response","catch","classes","component","maxWidth","className","noValidate","container","item","xs","required","fullWidth","id","label","autoComplete","helperText","onChange","autoFocus","type","onClick","data","status","request","window","location","href","justify","mt","Container","props","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","String","withStyles","_defineProperty","marginLeft","boxSizing","marginRight","paddingLeft","paddingRight","breakpoints","up","Object","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl"],"mappings":"yUAYA,SAASA,IACP,OAEE,kBAAC,IAAD,CAAYC,QAAQ,QAAQC,MAAM,gBAAgBC,MAAM,UACrD,kBADH,WAEa,KACV,IAAIC,MAAOC,cACX,KAMP,IAAMC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,MAAO,CACLC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE3CC,KAAM,CACJC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE3BY,OAAQ,CACNP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QAOjB,SAASa,IAAgB,MAGZC,IAAMC,SAAS,CACvCC,MAAM,KAJ8B,mBAG/BC,EAH+B,KAGxBC,EAHwB,OAOfJ,IAAMC,SAAS,CAChCC,MAAM,GACNG,IAAI,GACJC,SAAS,GACTC,UAAU,KAXsB,mBAO/BC,EAP+B,KAOzBC,EAPyB,OAeZT,IAAMC,SAAS,CACvCS,YAAY,GACZC,eAAe,GACfC,gBAAgB,GAChBC,UAAU,GACVC,YAAW,EACXC,cAAa,EACbC,cAAa,EACbC,aAAY,IAvBwB,mBAe/BC,EAf+B,KAexBC,EAfwB,KA+B5BC,EAAa,SAACC,GAClBZ,EAAO,eAAID,EAAL,eAAYa,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAC3C,IAAMD,EAAOF,EAAEC,OAAOC,KAChBC,EAAQH,EAAEC,OAAOE,MACvBC,EAAWF,EAAKC,IAIZC,EAAa,SAACF,EAAMC,GACZ,aAATD,IACmB,IAAjBC,EAAME,QACPP,GAAS,SAAAQ,GACcA,EAAUhB,eACbgB,EAAUV,YAG5B,MAFiB,IACH,EACP,eAAKU,EAAZ,CAAuBhB,eAFN,GAEqBM,aADxB,OAGXC,EAAMF,cACPG,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,IACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,GAEqBI,cADxB,QAKfQ,EAAME,OAAS,IAAMF,EAAME,OAAS,GAC1CP,GAAS,SAAAQ,GACcA,EAAUhB,eACbgB,EAAUV,YAG5B,MAFiB,gDACH,EACP,eAAKU,EAAZ,CAAuBhB,eAFN,+CAEqBM,aADxB,OAGTO,IAAUhB,EAAKD,WAAkC,KAAnBC,EAAKD,UACtCY,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,mDACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,kDAEqBI,cADxB,OAKjBG,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,IACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,GAEqBI,cADxB,SAMrBG,GAAS,SAAAQ,GACcA,EAAUhB,eACbgB,EAAUV,YAG5B,MAFiB,IACH,EACP,eAAKU,EAAZ,CAAuBhB,eAFN,GAEqBM,aADxB,OAGTO,IAAUhB,EAAKD,WAAkC,KAAnBC,EAAKD,UACtCY,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,mDACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,kDAEqBI,cADxB,OAKjBG,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,IACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,GAEqBI,cADxB,SAMb,cAATO,IAEmB,IAAjBC,EAAME,OACPP,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,IACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,GAEqBI,cADxB,OAITQ,IAAUhB,EAAKF,UAAiC,KAAlBE,EAAKF,SAC3Ca,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,mDACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,kDAEqBI,cADxB,OAKjBG,GAAS,SAAAQ,GACeA,EAAUf,gBACbe,EAAUX,aAG7B,MAFkB,IACH,EACR,eAAKW,EAAZ,CAAuBf,gBAFL,GAEqBI,cADxB,SAuCnBY,EAAc,SAACP,GAEjBQ,QAAQC,IAAI3B,GACZ4B,SAASC,uBAAuB,YAAY,GAAGC,QAAS,EACxDF,SAASC,uBAAuB,YAAY,GAAGC,QAAS,EACxDF,SAASC,uBAAuB,YAAY,GAAGC,QAAS,EACxDF,SAASG,eAAe,UAAUD,QAAQ,EAC1CF,SAASG,eAAe,SAASC,UAAU,EAC3CJ,SAASG,eAAe,WAAWD,QAAQ,EAC3CG,IAAMC,KAAK,yDAAyDlC,GAClEmC,MAAK,SAAAC,GACCV,QAAQC,IAAIS,MACbC,OAAM,SAAAtB,GAAUW,QAAQC,IAAIZ,OA4BnCuB,EAAU5D,IAGhB,OACE,kBAAC,IAAD,CAAW6D,UAAU,OAAOC,SAAS,MACnC,kBAAC,IAAD,MACA,yBAAKC,UAAWH,EAAQzD,OACtB,kBAAC,IAAD,CAAY0D,UAAU,KAAKlE,QAAQ,MAAnC,4BAGA,0BAAMoE,UAAWH,EAAQ7C,KAAMiD,YAAU,GAEvC,kBAAC,IAAD,CAAMC,WAAS,EAAC5D,QAAS,GAEvB,kBAAC,IAAD,CAAM6D,MAAI,EAACC,GAAI,IACb,kBAAC,IAAD,CACExE,QAAQ,WACRyE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,kCACN7B,KAAK,QACL8B,aAAa,QACbnC,MAAQA,EAAMH,aAChBuC,WAAcpC,EAAMR,YAClB6C,SAxNU,SAAClC,GACrBjB,EAAS,eAAID,EAAL,eAAakB,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,SAC9Cf,EAAO,eAAID,EAAL,eAAYa,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,aAyNrC,kBAAC,IAAD,CAAMuB,MAAI,EAACC,GAAI,GAAIJ,UAAY,WAAWX,QAAQ,GAChD,kBAAC,IAAD,CACEoB,aAAa,QACb9B,KAAK,MACL/C,QAAQ,WACRyE,UAAQ,EACRC,WAAS,EACTC,GAAG,MACHC,MAAM,iBACNI,WAAS,EACTtC,MAAQA,EAAMJ,WAChBwC,WAAcpC,EAAML,UAClB0C,SAAWnC,KAGf,kBAAC,IAAD,CAAM2B,MAAI,EAACC,GAAI,GAAIJ,UAAY,WAAWX,QAAQ,GAChD,kBAAC,IAAD,CACEzD,QAAQ,WACRyE,UAAQ,EACRC,WAAS,EACT3B,KAAK,WACL6B,MAAM,eACNK,KAAK,WACLN,GAAG,WACHE,aAAa,WACbnC,MAAQA,EAAMD,YAChBqC,WAAcpC,EAAMP,eAClB4C,SAAWnC,KAGf,kBAAC,IAAD,CAAM2B,MAAI,EAACC,GAAI,GAAIJ,UAAY,WAAWX,QAAQ,GAChD,kBAAC,IAAD,CACEzD,QAAQ,WACRyE,UAAQ,EACRC,WAAS,EACT3B,KAAK,YACL6B,MAAM,uBACNK,KAAK,WACLN,GAAG,iBACHjC,MAAQA,EAAMF,aAChBsC,WAAcpC,EAAMN,gBACpB2C,SAAWnC,MAIf,kBAAC,IAAD,CACAsC,QAjJiB,SAACrC,GACpBQ,QAAQC,IAAI3B,GACZiC,IAAMC,KAAK,qDAAqDlC,GAC9DmC,MAAK,SAAAC,GAC8B,OAA1BA,EAASoB,KAAKC,OACfzC,GAAS,SAAAQ,GACWA,EAAUjB,YACTiB,EAAUZ,aAG7B,MAFc,sCACC,EACR,eAAKY,EAAZ,CAAuBjB,YAFT,qCAEqBK,cADpB,OAIVG,EAAMH,cACbI,GAAS,SAAAQ,GACWA,EAAUjB,YACTiB,EAAUZ,aAG7B,MAFc,IACC,EACR,eAAKY,EAAZ,CAAuBjB,YAFT,GAEqBK,cADpB,OAIjBa,KAGAA,OAEHY,OAAM,SAAAtB,GAAUW,QAAQC,IAAIZ,OAuH/BgC,WAAS,EACTzE,MAAQ,YACRD,QAAQ,YACR2E,GAAK,SACLP,UAAWH,EAAQ3C,OACnBmC,QAAU,GAPZ,iBAWA,kBAAC,IAAD,CACAyB,QA7GgB,SAACrC,GACrB,IAAMwC,EAAU,CACd3D,MAAOM,EAAKN,MACZG,IAAIG,EAAKH,IACTC,SAAUE,EAAKF,UAGf8B,IAAMC,KAAK,8DAA8DwB,GACvEvB,MAAK,SAAAC,GACJV,QAAQC,IAAIS,GACiB,OAAzBA,EAASoB,KAAKC,OACfzC,GAAS,SAAAQ,GACSA,EAAUd,UACTc,EAAUb,WAG3B,MAFY,0BACC,EACN,eAAKa,EAAZ,CAAuBd,UAFX,yBAEqBC,YADpB,OAKjBgD,OAAOC,SAASC,KAAO,OAEpBxB,OAAM,SAAAtB,GAAUW,QAAQC,IAAIZ,OAwF/BgC,WAAS,EACTzE,MAAQ,YACRD,QAAQ,YACR2E,GAAK,UACLP,UAAWH,EAAQ3C,OACnBqC,SAAyB,KAAb3B,EAAKH,KAA8B,KAAlBG,EAAKF,UAAmC,KAAlBE,EAAKD,WAAkBW,EAAMD,aAChFC,EAAMF,aACNiB,QAAU,GATZ,UAaA,kBAAC,IAAD,CAAMa,WAAS,EAACmB,QAAQ,YACtB,kBAAC,IAAD,CAAMlB,MAAI,GACR,kBAAC,IAAD,CAAMiB,KAAK,KAAIxF,QAAQ,SAAvB,0BAOR,kBAAC,IAAD,CAAK0F,GAAI,GACP,kBAAC3F,EAAD,U,iCCrXR,iEAqEI4F,EAAYnE,cAAiB,SAAmBoE,EAAOC,GACzD,IAAI5B,EAAU2B,EAAM3B,QAChBG,EAAYwB,EAAMxB,UAClB0B,EAAmBF,EAAM1B,UACzB6B,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAwBJ,EAAMK,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAeN,EAAMO,MACrBA,OAAyB,IAAjBD,GAAkCA,EAC1CE,EAAkBR,EAAMzB,SACxBA,OAA+B,IAApBiC,EAA6B,KAAOA,EAC/CC,EAAQC,YAAyBV,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,QAAS,aAE7G,OAAoBpE,gBAAoBuE,EAAWQ,YAAS,CAC1DnC,UAAWoC,YAAKvC,EAAQwC,KAAMrC,EAAW+B,GAASlC,EAAQkC,MAAOF,GAAkBhC,EAAQgC,gBAA6B,IAAb9B,GAAsBF,EAAQ,WAAWyC,OAAOC,YAAWC,OAAOzC,OAC7K0B,IAAKA,GACJQ,OA0CUQ,iBAvHK,SAAgBtG,GAClC,MAAO,CAELkG,KAAMK,YAAgB,CACpBzF,MAAO,OACP0F,WAAY,OACZC,UAAW,aACXC,YAAa,OACbC,YAAa3G,EAAMG,QAAQ,GAC3ByG,aAAc5G,EAAMG,QAAQ,GAC5BC,QAAS,SACRJ,EAAM6G,YAAYC,GAAG,MAAO,CAC7BH,YAAa3G,EAAMG,QAAQ,GAC3ByG,aAAc5G,EAAMG,QAAQ,KAI9BuF,eAAgB,CACdiB,YAAa,EACbC,aAAc,GAIhBhB,MAAOmB,OAAOC,KAAKhH,EAAM6G,YAAYI,QAAQC,QAAO,SAAUC,EAAKC,GACjE,IAAI3E,EAAQzC,EAAM6G,YAAYI,OAAOG,GAQrC,OANc,IAAV3E,IACF0E,EAAInH,EAAM6G,YAAYC,GAAGM,IAAe,CACtCxD,SAAUnB,IAIP0E,IACN,IAGHE,WAAYd,YAAgB,GAAIvG,EAAM6G,YAAYC,GAAG,MAAO,CAC1DlD,SAAU0D,KAAKC,IAAIvH,EAAM6G,YAAYI,OAAOhD,GAAI,OAIlDuD,WAAYjB,YAAgB,GAAIvG,EAAM6G,YAAYC,GAAG,MAAO,CAC1DlD,SAAU5D,EAAM6G,YAAYI,OAAOQ,KAIrCC,WAAYnB,YAAgB,GAAIvG,EAAM6G,YAAYC,GAAG,MAAO,CAC1DlD,SAAU5D,EAAM6G,YAAYI,OAAOU,KAIrCC,WAAYrB,YAAgB,GAAIvG,EAAM6G,YAAYC,GAAG,MAAO,CAC1DlD,SAAU5D,EAAM6G,YAAYI,OAAOY,KAIrCC,WAAYvB,YAAgB,GAAIvG,EAAM6G,YAAYC,GAAG,MAAO,CAC1DlD,SAAU5D,EAAM6G,YAAYI,OAAOc,QA8DP,CAChCvF,KAAM,gBADO8D,CAEZlB","file":"static/js/19.876a0b63.chunk.js","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios'\n\nfunction Copyright() {\n  return (\n    // regturn SW Vault copy right\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n        SW Vault{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n// set up styles\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\n\n// forget password page that allows user to get a new password\nexport default function ForgetPassword(){\n\n  // set up values for axios requests\n  const [state, setState] = React.useState({\n    email:\"\"\n  })\n\n  const [pins, setPin] = React.useState({\n        email:\"\",\n        pin:\"\",\n        password:\"\",\n        cpassword:\"\"\n  })\n\n\n  const [error, setError] = React.useState({\n    email_error:\"\",\n    password_error:\"\",\n    cpassword_error:\"\",\n    pin_error:\"\",\n    piniserror:false,\n    emailiserror:false,\n    cpassiserror:false,\n    passiserror:false\n  })\n\n  // change handler that handles input change\n    const changeHandler = (e) => {\n      setState({...state, [e.target.name]: e.target.value})\n      setPin({...pins, [e.target.name]: e.target.value})\n      }\n      const pinHandler = (e) => {\n        setPin({...pins, [e.target.name]: e.target.value})\n        const name = e.target.name;\n        const value = e.target.value;\n        validation(name,value)\n      }\n\n      // validation function that checks input validation\n      const validation = (name, value)=>{\n        if(name === 'password'){\n          if(value.length === 0){\n            setError(prevState => {\n              var password_error = prevState.password_error;\n              var passiserror = prevState.passiserror;\n              password_error = \"\"\n              passiserror = false\n              return { ...prevState, password_error,passiserror };\n            });\n              if(error.cpassiserror){\n                setError(prevState => {\n                  var cpassword_error = prevState.cpassword_error;\n                  var cpassiserror = prevState.cpassiserror;\n                  cpassword_error = \"\"\n                  cpassiserror = false\n                  return { ...prevState, cpassword_error,cpassiserror };\n                });\n              }\n          }\n          else if(value.length > 15 || value.length < 8){\n            setError(prevState => {\n              var password_error = prevState.password_error;\n              var passiserror = prevState.passiserror;\n              password_error = \"Your password length should between 8 and 15\"\n              passiserror = true\n              return { ...prevState, password_error,passiserror };\n            });\n              if(!(value === pins.cpassword) && (pins.cpassword !== \"\")){\n                setError(prevState => {\n                  var cpassword_error = prevState.cpassword_error;\n                  var cpassiserror = prevState.cpassiserror;\n                  cpassword_error = \"Your input doesn't match your previous password\"\n                  cpassiserror = true\n                  return { ...prevState, cpassword_error,cpassiserror };\n                });\n              }\n              else {\n                setError(prevState => {\n                  var cpassword_error = prevState.cpassword_error;\n                  var cpassiserror = prevState.cpassiserror;\n                  cpassword_error = \"\"\n                  cpassiserror = false\n                  return { ...prevState, cpassword_error,cpassiserror };\n                });\n              }\n          }\n          else{\n            setError(prevState => {\n              var password_error = prevState.password_error;\n              var passiserror = prevState.passiserror;\n              password_error = \"\"\n              passiserror = false\n              return { ...prevState, password_error,passiserror };\n            });\n              if(!(value === pins.cpassword) && (pins.cpassword !== \"\")){\n                setError(prevState => {\n                  var cpassword_error = prevState.cpassword_error;\n                  var cpassiserror = prevState.cpassiserror;\n                  cpassword_error = \"Your input doesn't match your previous password\"\n                  cpassiserror = true\n                  return { ...prevState, cpassword_error,cpassiserror };\n                });\n              }\n              else {\n                setError(prevState => {\n                  var cpassword_error = prevState.cpassword_error;\n                  var cpassiserror = prevState.cpassiserror;\n                  cpassword_error = \"\"\n                  cpassiserror = false\n                  return { ...prevState, cpassword_error,cpassiserror };\n                });\n              }\n          }\n        }\n        if(name === 'cpassword'){\n    \n          if(value.length === 0){\n            setError(prevState => {\n              var cpassword_error = prevState.cpassword_error;\n              var cpassiserror = prevState.cpassiserror;\n              cpassword_error = \"\"\n              cpassiserror = false\n              return { ...prevState, cpassword_error,cpassiserror };\n            });\n          }\n          else if(!(value === pins.password)  && (pins.password !== \"\")){\n            setError(prevState => {\n              var cpassword_error = prevState.cpassword_error;\n              var cpassiserror = prevState.cpassiserror;\n              cpassword_error = \"Your input doesn't match your previous password\"\n              cpassiserror = true\n              return { ...prevState, cpassword_error,cpassiserror };\n            });\n          }\n          else{\n            setError(prevState => {\n              var cpassword_error = prevState.cpassword_error;\n              var cpassiserror = prevState.cpassiserror;\n              cpassword_error = \"\"\n              cpassiserror = false\n              return { ...prevState, cpassword_error,cpassiserror };\n            });\n          }\n      }\n      }\n\n      // request that checks if the email is existing in the database\n      const checkHandler = (e) =>{\n        console.log(state)\n        axios.post(\"https://vending-insights-smu.firebaseapp.com/check\",state)\n         .then(response => {\n                if(response.data.status ===  \"NO\"){\n                  setError(prevState => {\n                    var email_error = prevState.email_error;\n                    var emailiserror = prevState.emailiserror;\n                    email_error = \"The email you input doesn't exist.\"\n                    emailiserror = true\n                    return { ...prevState, email_error,emailiserror };\n                  });\n                }\n                else if (error.emailiserror){\n                  setError(prevState => {\n                    var email_error = prevState.email_error;\n                    var emailiserror = prevState.emailiserror;\n                    email_error = \"\"\n                    emailiserror = false\n                    return { ...prevState, email_error,emailiserror };\n                    \n                  });\n                  sendHandler()\n                }\n                else{\n                  sendHandler()\n                }\n            }).catch(error => {console.log(error)})\n    }\n\n    // once the email exists, show hidden pin fields and call request that sends change code to the email\n    const sendHandler = (e) =>{\n\n        console.log(state)\n        document.getElementsByClassName(\"pinfield\")[0].hidden = false;\n        document.getElementsByClassName(\"pinfield\")[1].hidden = false;\n        document.getElementsByClassName(\"pinfield\")[2].hidden = false;\n        document.getElementById(\"emailb\").hidden= true;\n        document.getElementById(\"email\").disabled= true;\n        document.getElementById(\"submitb\").hidden= false;\n        axios.post(\"https://vending-insights-smu.firebaseapp.com/sendEmail\",state)\n         .then(response => {\n                console.log(response)\n            }).catch(error => {console.log(error)})\n    }\n\n    // request that setup new password\n    const submitHandler = (e) =>{\n      const request = {\n        email: pins.email,\n        pin:pins.pin,\n        password: pins.password\n      }\n\n        axios.post(\"https://vending-insights-smu.firebaseapp.com/changePassword\",request)\n         .then(response => {\n           console.log(response)\n            if(response.data.status === 'NO'){\n              setError(prevState => {\n                var pin_error = prevState.pin_error;\n                var piniserror = prevState.piniserror;\n                pin_error = \"Your pin is incorrect.\"\n                piniserror = true\n                return { ...prevState, pin_error,piniserror };\n              });\n            }\n            else{\n            window.location.href = '/';\n            }\n            }).catch(error => {console.log(error)})\n    }\n  const classes = useStyles();\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Enter Your Email Address\n        </Typography>\n        <form className={classes.form} noValidate \n            >\n          <Grid container spacing={2}>\n            \n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Please Enter Your Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                error ={error.emailiserror}\n              helperText = {error.email_error}\n                onChange= {changeHandler}\n              />\n            </Grid>\n            <Grid item xs={12} className = 'pinfield' hidden={true} >\n              <TextField\n                autoComplete=\"cname\"\n                name=\"pin\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"pin\"\n                label=\"Enter Your PIN\"\n                autoFocus\n                error ={error.piniserror}\n              helperText = {error.pin_error}\n                onChange= {pinHandler}\n              />\n            </Grid>\n            <Grid item xs={12} className = 'pinfield' hidden={true}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"New Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"password\"\n                error ={error.passiserror}\n              helperText = {error.password_error}\n                onChange= {pinHandler}\n              />\n            </Grid>\n            <Grid item xs={12} className = 'pinfield' hidden={true}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"cpassword\"\n                label=\"Comfirm New Password\"\n                type=\"password\"\n                id=\"changePassword\"\n                error ={error.cpassiserror}\n              helperText = {error.cpassword_error}\n              onChange= {pinHandler}\n              />\n            </Grid>\n          </Grid>\n          <Button\n          onClick = {checkHandler}\n            fullWidth\n            color = 'secondary'\n            variant=\"contained\"\n            id = \"emailb\"\n            className={classes.submit}\n            hidden = {false}\n          >\n            Send to Email\n          </Button>\n          <Button\n          onClick = {submitHandler}\n            fullWidth\n            color = 'secondary'\n            variant=\"contained\"\n            id = \"submitb\"\n            className={classes.submit}\n            disabled = {pins.pin === \"\"||pins.password === \"\"||pins.cpassword ===\"\"|| error.passiserror\n          ||error.cpassiserror}\n            hidden = {true}\n          >\n            Submit\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"\\\" variant=\"body2\">\n                Back to Login Page\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);"],"sourceRoot":""}